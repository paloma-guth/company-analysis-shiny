---
title: "data_collection"
---

## Econ data

```{r}
#| include: FALSE

library(tidyverse)
library(stringr)
library(rvest)
library(httr)
library(jsonlite)
library(tidytext)
library(stringr)
library(dplyr)

afinn<-get_sentiments("afinn")

robotstxt::paths_allowed("https://stockanalysis.com/stocks/nflx/financials/balance-sheet/")
#cheked - WSJ allow data scrapping
```

#### Data collection


```{r}
library(rvest)

scrape_data <- function(url) {
  webpage <- read_html(url)
  tables <- html_nodes(webpage, css = "table") 
  dataset <- html_table(tables, header = TRUE, fill = TRUE)[[1]]
  return(dataset)
}

terms <- c("nflx", "dis", "wbd", "tsla", "tm", "hmc", "googl", "meta", "bidu", "adm", "agro", "fdp", "cvs", "ci", "elv")
types <- c("balance-sheet", "cash-flow-statement")

scrape_all_data <- function(terms, types) {
  
  for (term in terms) {
    for (type in types) {
      standard_url <- str_c("https://stockanalysis.com/stocks/",term,"/financials/",type,"/")
      dataset <- scrape_data(standard_url)
      assign(paste0(term, "-", type), dataset, envir = .GlobalEnv)
      #save to csv - in case
      #dataset_name <- paste0(term, "_", type, ".csv")  # Generate unique filename
      #write.csv(dataset, file = dataset_name, row.names = FALSE)
    }
  }
}

scrape_all_data(terms, types)

```


###Cash flow data
```{r}
pivot_data <- function(data) {
  data_long <- data |>
    pivot_longer(cols = -Year, names_to = "Variable", values_to = "Value")
  
  data_wide <- data_long |>
    pivot_wider(names_from = Year, values_from = Value)
  
  data_wide[data_wide == "-"] <- NA
  
  data_wide <- data_wide |>
    select(where(~ !any(is.na(.))))|>
    filter(!rowSums(across(everything(), ~. == "Upgrade")))
  

  tidy_df_name <- paste0(deparse(substitute(data)), "-tidy")
  
  assign(tidy_df_name, data_wide, envir = .GlobalEnv)
}

all_data<-c(`nflx-balance-sheet`, `dis-balance-sheet`, `wbd-balance-sheet`, `tsla-balance-sheet`, `tm-balance-sheet`, `hmc-balance-sheet`, `googl-balance-sheet`, `meta-balance-sheet`, `bidu-balance-sheet`, `adm-balance-sheet`, `agro-balance-sheet`, `fdp-balance-sheet`, `cvs-balance-sheet`, `ci-balance-sheet`, `elv-balance-sheet`, `nflx-cash-flow-statement`, `dis-cash-flow-statement`, `wbd-cash-flow-statement`, `tsla-cash-flow-statement`, `tm-cash-flow-statement`, `hmc-cash-flow-statement`, `googl-cash-flow-statement`, `meta-cash-flow-statement`, `bidu-cash-flow-statement`, `adm-cash-flow-statement`, `agro-cash-flow-statement`, `fdp-cash-flow-statement`, `cvs-cash-flow-statement`, `ci-cash-flow-statement`, `elv-cash-flow-statement`)

for(i in all_data){#not working
  pivot_data(i)
}

pivot_data(`nflx-balance-sheet`)#but this is working / char class issue

```


## Sentimental analysis data - NYT api

```{r}
library(nytimes)

nytimes_key("csHR8NIDuVovzJ9A15iyiEmR7aVAGBK9")

archive <- ny_archive(2023, 2)

main_headlines <- list()

for(i in archive){
  main_headline <- i$headline$main
  main_headlines <- c(main_headlines, main_headline)
}

main_headlines_df <- data.frame(Main_Headline = unlist(main_headlines))
str_detect(main_headlines_df$Main_Headline, "Officers")
main_headlines_df[str_detect(main_headlines_df$Main_Headline, "Tesla"), ]
```


```{r}
cash_fl_google <-`googl_cash-flow-statement`|>
  pivot_longer(cols= c("Net Income","Depreciation", "Share_Compensation", "Other_Activities"),
               names_to = "Category", 
               values_to = "Amount")

cash_fl_google
```


## Geolocation

```{r}
#get location of headquarters for each company
#leaflet graph - gps location
```
